package airlinebooking.core.ws.model;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;

import airlinebooking.core.ws.enumtype.CustomerBookingStatusType;

/**
 * CustomerBooking generated by hbm2java
 */
@Entity
@Table(name = "customer_booking", catalog = "airlinebooking")
public class CustomerBooking implements java.io.Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = -2146897702309881638L;
	private Integer id;
	private Account account;
	private Customer customer;
	private TicketStorage ticketStorage;
	private Integer adultQuanlity;
	private Integer childrenQuanlity;
	private Integer infantQuanlity;
	private Integer amountTotal;
	private CustomerBookingStatusType status = CustomerBookingStatusType.INACTIVE;
	private String createUser;
	private Date createDate;
	private String updateUser;
	private Date updateDate;

	public CustomerBooking() {
	}

	public CustomerBooking(TicketStorage ticketStorage) {
		this.ticketStorage = ticketStorage;
	}

	public CustomerBooking(Account account, Customer customer,
			TicketStorage ticketStorage, Integer adultQuanlity,
			Integer childrenQuanlity, Integer infantQuanlity,
			Integer amountTotal, String createUser, Date createDate,
			String updateUser, Date updateDate) {
		this.account = account;
		this.customer = customer;
		this.ticketStorage = ticketStorage;
		this.adultQuanlity = adultQuanlity;
		this.childrenQuanlity = childrenQuanlity;
		this.infantQuanlity = infantQuanlity;
		this.amountTotal = amountTotal;
		this.createUser = createUser;
		this.createDate = createDate;
		this.updateUser = updateUser;
		this.updateDate = updateDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(targetEntity = Account.class, cascade=CascadeType.ALL)
	@JoinColumn(name = "account_id", referencedColumnName = "id")
	public Account getAccount() {
		return this.account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	@ManyToOne(targetEntity = Customer.class, cascade=CascadeType.ALL)
	@JoinColumn(name = "customer_id", referencedColumnName = "id")
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomerId(Customer customer) {
		this.customer = customer;
	}

	@ManyToOne(targetEntity = TicketStorage.class, cascade=CascadeType.ALL)
	@JoinColumn(name = "ticket_storage_id", referencedColumnName = "id")
	public TicketStorage getTicketStorage() {
		return this.ticketStorage;
	}

	public void setTicketStorage(TicketStorage ticketStorage) {
		this.ticketStorage = ticketStorage;
	}

	@Column(name = "adult_quanlity")
	public Integer getAdultQuanlity() {
		return this.adultQuanlity;
	}

	public void setAdultQuanlity(Integer adultQuanlity) {
		this.adultQuanlity = adultQuanlity;
	}

	@Column(name = "children_quanlity")
	public Integer getChildrenQuanlity() {
		return this.childrenQuanlity;
	}

	public void setChildrenQuanlity(Integer childrenQuanlity) {
		this.childrenQuanlity = childrenQuanlity;
	}

	@Column(name = "infant_quanlity")
	public Integer getInfantQuanlity() {
		return this.infantQuanlity;
	}

	public void setInfantQuanlity(Integer infantQuanlity) {
		this.infantQuanlity = infantQuanlity;
	}

	@Column(name = "amount_total")
	public Integer getAmountTotal() {
		return this.amountTotal;
	}

	public void setAmountTotal(Integer amountTotal) {
		this.amountTotal = amountTotal;
	}

	@Column(name = "create_user", length = 100)
	public String getCreateUser() {
		return this.createUser;
	}

	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "update_user", length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "status")
	@Type(type = "airlinebooking.core.ws.enumtype.GenericEnumUserType", parameters = {
			@Parameter(name = "enumClass", value = "airlinebooking.core.ws.enumtype.CustomerBookingStatusType"),
			@Parameter(name = "identifierMethod", value = "getValue"),
			@Parameter(name = "valueOfMethod", value = "parseValue") })
	public CustomerBookingStatusType getStatus() {
		return status;
	}

	public void setStatus(CustomerBookingStatusType status) {
		this.status = status;
	}

}
