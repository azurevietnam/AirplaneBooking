package airlinebooking.core.ws.model;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import airlinebooking.core.ws.enumtype.TicketStorageAirlineType;

/**
 * TicketStorage generated by hbm2java
 */
@Entity
@Table(name = "ticket_storage", catalog = "airlinebooking")
public class TicketStorage implements java.io.Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1927781322548261468L;
	private Integer id;
	private TicketStorageAirlineType airlineType = TicketStorageAirlineType.UNKNOWN;
	private String flightCode;
	private String originCode;
	private String destinationCode;
	private Date fromDate;
	private Date toDate;
	private Date fromTime;
	private Date toTime;
	private Integer durationTime;
	private String ticketType;
	private AppParam originParamId;
	private AppParam destinationParamId;
	private Integer amount;
	private String createUser;
	private Date createDate;
	private String updateUser;
	private Date updateDate;

	public TicketStorage() {
	}

	public TicketStorage(String flightCode,
			String originCode, String destinationCode, Date fromDate,
			Date toDate, Date fromTime, Date toTime, Integer durationTime,
			String ticketType, AppParam originParamId,
			AppParam destinationParamId, Integer amount, String createUser,
			Date createDate, String updateUser, Date updateDate) {
		this.flightCode = flightCode;
		this.originCode = originCode;
		this.destinationCode = destinationCode;
		this.fromDate = fromDate;
		this.toDate = toDate;
		this.fromTime = fromTime;
		this.toTime = toTime;
		this.durationTime = durationTime;
		this.ticketType = ticketType;
		this.originParamId = originParamId;
		this.destinationParamId = destinationParamId;
		this.amount = amount;
		this.createUser = createUser;
		this.createDate = createDate;
		this.updateUser = updateUser;
		this.updateDate = updateDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "airline_type")
	public TicketStorageAirlineType getAirlineType() {
		return this.airlineType;
	}

	public void setAirlineType(TicketStorageAirlineType airlineType) {
		this.airlineType = airlineType;
	}

	@Column(name = "flight_code", length = 100)
	public String getFlightCode() {
		return this.flightCode;
	}

	public void setFlightCode(String flightCode) {
		this.flightCode = flightCode;
	}

	@Column(name = "origin_code", length = 10)
	public String getOriginCode() {
		return this.originCode;
	}

	public void setOriginCode(String originCode) {
		this.originCode = originCode;
	}

	@Column(name = "destination_code", length = 10)
	public String getDestinationCode() {
		return this.destinationCode;
	}

	public void setDestinationCode(String destinationCode) {
		this.destinationCode = destinationCode;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "from_date", length = 10)
	public Date getFromDate() {
		return this.fromDate;
	}

	public void setFromDate(Date fromDate) {
		this.fromDate = fromDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "to_date", length = 10)
	public Date getToDate() {
		return this.toDate;
	}

	public void setToDate(Date toDate) {
		this.toDate = toDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "from_time", length = 19)
	public Date getFromTime() {
		return this.fromTime;
	}

	public void setFromTime(Date fromTime) {
		this.fromTime = fromTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "to_time", length = 19)
	public Date getToTime() {
		return this.toTime;
	}

	public void setToTime(Date toTime) {
		this.toTime = toTime;
	}

	@Column(name = "duration_time")
	public Integer getDurationTime() {
		return this.durationTime;
	}

	public void setDurationTime(Integer durationTime) {
		this.durationTime = durationTime;
	}

	@Column(name = "ticket_type", length = 100)
	public String getTicketType() {
		return this.ticketType;
	}

	public void setTicketType(String ticketType) {
		this.ticketType = ticketType;
	}

	@ManyToOne(targetEntity = AppParam.class, cascade=CascadeType.ALL)
	@JoinColumn(name = "origin_param_id", referencedColumnName = "id")
	public AppParam getOriginParamId() {
		return this.originParamId;
	}

	public void setOriginParamId(AppParam originParamId) {
		this.originParamId = originParamId;
	}

	@ManyToOne(targetEntity = AppParam.class, cascade=CascadeType.ALL)
	@JoinColumn(name = "destination_param_id", referencedColumnName = "id")
	public AppParam getDestinationParamId() {
		return this.destinationParamId;
	}

	public void setDestinationParamId(AppParam destinationParamId) {
		this.destinationParamId = destinationParamId;
	}

	@Column(name = "amount")
	public Integer getAmount() {
		return this.amount;
	}

	public void setAmount(Integer amount) {
		this.amount = amount;
	}

	@Column(name = "create_user", length = 100)
	public String getCreateUser() {
		return this.createUser;
	}

	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "update_user", length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

}
