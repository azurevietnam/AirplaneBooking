package airlinebooking.common.model;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;

import airlinebooking.common.enumtype.AirlineType;

/**
 * TicketStorage generated by hbm2java
 */
@Entity
@Table(name = "ticket")
public class Ticket implements java.io.Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1927781322548261468L;
	private Integer id;
	private AirlineType airlineType;
	private String originationCode;
	private String destinationCode;
	private Date pickedDate;
	private Date fromTime;
	private Date toTime;
	private Integer breakpointNumber;
	private Integer durationTime;
	private String createUser;
	private Date createDate;
	private String updateUser;
	private Date updateDate;
	
	private List<TicketFlightDetail> ticketFlightDetails = new ArrayList<TicketFlightDetail>();
	private List<TicketPriceDetail> ticketPriceDetails = new ArrayList<TicketPriceDetail>();

	public Ticket() {}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "airline_type")
	@Type(type = "airlinebooking.common.enumtype.GenericEnumUserType", parameters = {
			@Parameter(name = "enumClass", value = "airlinebooking.common.enumtype.AirlineType"),
			@Parameter(name = "identifierMethod", value = "getValue"),
			@Parameter(name = "valueOfMethod", value = "parseValue") })
	public AirlineType getAirlineType() {
		return this.airlineType;
	}

	public void setAirlineType(AirlineType airlineType) {
		this.airlineType = airlineType;
	}

	@Column(name = "origination_code", length = 10)
	public String getOriginationCode() {
		return this.originationCode;
	}

	public void setOriginationCode(String originationCode) {
		this.originationCode = originationCode;
	}

	@Column(name = "destination_code", length = 10)
	public String getDestinationCode() {
		return this.destinationCode;
	}

	public void setDestinationCode(String destinationCode) {
		this.destinationCode = destinationCode;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "picked_date", length = 10)
	public Date getPickedDate() {
		return this.pickedDate;
	}

	public void setPickedDate(Date pickedDate) {
		this.pickedDate = pickedDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "from_time", length = 19)
	public Date getFromTime() {
		return this.fromTime;
	}

	public void setFromTime(Date fromTime) {
		this.fromTime = fromTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "to_time", length = 19)
	public Date getToTime() {
		return this.toTime;
	}

	public void setToTime(Date toTime) {
		this.toTime = toTime;
	}

	@Column(name = "duration_time")
	public Integer getDurationTime() {
		return this.durationTime;
	}

	public void setDurationTime(Integer durationTime) {
		this.durationTime = durationTime;
	}
	
	@Column(name = "breakpoint_number")
	public Integer getBreakpointNumber() {
		return breakpointNumber;
	}

	public void setBreakpointNumber(Integer breakpointNumber) {
		this.breakpointNumber = breakpointNumber;
	}

	@Column(name = "create_user", length = 100)
	public String getCreateUser() {
		return this.createUser;
	}

	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19, columnDefinition="TIMESTAMP default CURRENT_TIMESTAMP", insertable=false, updatable=false)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "update_user", length = 100)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19, columnDefinition="TIMESTAMP default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP")
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@OneToMany(cascade=CascadeType.ALL)
    @JoinColumn(name="ticket_id")
	public List<TicketFlightDetail> getTicketFlightDetails() {
		return ticketFlightDetails;
	}

	public void setTicketFlightDetails(List<TicketFlightDetail> ticketFlightDetails) {
		this.ticketFlightDetails = ticketFlightDetails;
	}
	
	@OneToMany(cascade=CascadeType.ALL)
    @JoinColumn(name="ticket_id")
	public List<TicketPriceDetail> getTicketPriceDetails() {
		return ticketPriceDetails;
	}

	public void setTicketPriceDetails(List<TicketPriceDetail> ticketPriceDetails) {
		this.ticketPriceDetails = ticketPriceDetails;
	}

}
